{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/labs/mod4/complete-react-practice-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/flatironschool/labs/mod4/complete-react-practice-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/labs/mod4/complete-react-practice-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/labs/mod4/complete-react-practice-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/labs/mod4/complete-react-practice-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/labs/mod4/complete-react-practice-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/labs/mod4/complete-react-practice-project/src/containers/Bookshelf.js\";\nimport React from \"react\";\nimport Book from \"../components/Book\";\n\nvar Bookshelf =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Bookshelf, _React$Component);\n\n  function Bookshelf() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Bookshelf);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Bookshelf)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: '' // booksToShow: this.props.booksForShelf \n\n    };\n\n    _this.changeHandler = function (e) {\n      var _this$setState;\n\n      var updatedBookList = _this.props.booksForShelf.filter(function (book) {\n        return book.title.toUpperCase().startsWith(e.target.value.toUpperCase());\n      });\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, e.target.name, e.target.value), _defineProperty(_this$setState, \"booksToShow\", updatedBookList), _this$setState));\n    };\n\n    return _this;\n  }\n\n  _createClass(Bookshelf, [{\n    key: \"render\",\n    // clickHandler = (e) => {\n    //   const updatedBookList = this.state.booksToShow.filter(book => book.title.toUpperCase().startsWith(e.target.value))\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var bookComponents = this.props.booksForShelf.map(function (book) {\n        return React.createElement(Book, {\n          book: book,\n          key: \"shelf-\".concat(book.id),\n          clickHandler: _this2.props.removeBookFromShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Book Shelf\"), React.createElement(\"input\", {\n        name: \"search\",\n        value: this.state.search,\n        type: \"text\",\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, bookComponents));\n    }\n  }]);\n\n  return Bookshelf;\n}(React.Component);\n\n;\nexport default Bookshelf;","map":{"version":3,"sources":["/Users/flatironschool/labs/mod4/complete-react-practice-project/src/containers/Bookshelf.js"],"names":["React","Book","Bookshelf","state","search","changeHandler","e","updatedBookList","props","booksForShelf","filter","book","title","toUpperCase","startsWith","target","value","setState","name","console","log","bookComponents","map","id","removeBookFromShelf","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,S;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF,CAEN;;AAFM,K;;UAKRC,a,GAAgB,UAACC,CAAD,EAAO;AAAA;;AACrB,UAAMC,eAAe,GAAG,MAAKC,KAAL,CAAWC,aAAX,CAAyBC,MAAzB,CAAgC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,UAAzB,CAAoCR,CAAC,CAACS,MAAF,CAASC,KAAT,CAAeH,WAAf,EAApC,CAAJ;AAAA,OAApC,CAAxB;;AACA,YAAKI,QAAL,uDACGX,CAAC,CAACS,MAAF,CAASG,IADZ,EACmBZ,CAAC,CAACS,MAAF,CAASC,KAD5B,kDAEeT,eAFf;AAID,K;;;;;;;AAED;AACA;AACA;6BAEQ;AAAA;;AACNY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACF,UAAMa,cAAc,GAAG,KAAKb,KAAL,CAAWC,aAAX,CAAyBa,GAAzB,CAA6B,UAAAX,IAAI;AAAA,eAAI,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,GAAG,kBAAWA,IAAI,CAACY,EAAhB,CAArB;AAA2C,UAAA,YAAY,EAAE,MAAI,CAACf,KAAL,CAAWgB,mBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAjC,CAAvB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,MAAvC;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,QAAQ,EAAE,KAAKC,aAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKgB,cAAL,CAJF,CADF;AAQC;;;;EA9BqBrB,KAAK,CAACyB,S;;AAgC7B;AAED,eAAevB,SAAf","sourcesContent":["import React from \"react\";\nimport Book from \"../components/Book\";\n\nclass Bookshelf extends React.Component{\n\n  state = {\n    search: ''\n    // booksToShow: this.props.booksForShelf \n  }\n\n  changeHandler = (e) => {\n    const updatedBookList = this.props.booksForShelf.filter(book => book.title.toUpperCase().startsWith(e.target.value.toUpperCase()))\n    this.setState({\n      [e.target.name]: e.target.value,\n      booksToShow: updatedBookList\n    })\n  }\n\n  // clickHandler = (e) => {\n  //   const updatedBookList = this.state.booksToShow.filter(book => book.title.toUpperCase().startsWith(e.target.value))\n  // }\n\n  render(){\n    console.log(this.props)\n  const bookComponents = this.props.booksForShelf.map(book => <Book book={book} key={`shelf-${book.id}`} clickHandler={this.props.removeBookFromShelf}/>)\n  return (\n    <div>\n      <h1>Book Shelf</h1>\n      <input name='search' value={this.state.search} type='text' onChange={this.changeHandler}></input>\n      {/* <button onClick={this.clickHandler}>Search</button> */}\n      <ul>{bookComponents}</ul>\n    </div>\n  );\n  }\n  \n};\n\nexport default Bookshelf;\n"]},"metadata":{},"sourceType":"module"}